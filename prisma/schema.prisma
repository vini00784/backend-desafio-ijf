// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String
  username  String   @unique
  password  String

  courses Course[]
}

model Student {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String
  username  String   @unique
  password  String

  studentCourses StudentCourse[]
  studentLessons StudentLesson[]
}

model Course {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  name        String
  description String
  banner      String
  teacherId   String

  lessons        Lesson[]
  teacher        Teacher         @relation(fields: [teacherId], references: [id])
  studentCourses StudentCourse[]
}

model Lesson {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  courseId  String
  content   String

  studentLessons StudentLesson[]
  course         Course          @relation(fields: [courseId], references: [id])
}

model StudentCourse {
  id        String       @id @default(uuid())
  createdAt DateTime     @default(now())
  studentId String
  courseId  String
  status    CourseStatus @default(notStarted)

  student Student @relation(fields: [studentId], references: [id])
  course  Course  @relation(fields: [courseId], references: [id])
}

model StudentLesson {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  studentId String
  lessonId  String
  isWatched Boolean  @default(false)

  student Student @relation(fields: [studentId], references: [id])
  lesson  Lesson  @relation(fields: [lessonId], references: [id])
}

enum CourseStatus {
  notStarted
  inProgress
  finished
  approved
}
